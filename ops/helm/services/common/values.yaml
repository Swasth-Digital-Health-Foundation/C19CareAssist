# Default values for commons.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
global:
    containerRegistry: hasuraci
    imagePullSecrets: []

namespace: default
replicas: 1
httpPort: 8080
appType: ""

disableAnnotationTimestamp: true

ingress:
  enabled: false
  zuul: false
  annotations: |
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true" 
    certmanager.k8s.io/cluster-issuer: {{ coalesce .Values.global.certIssuer "letsencrypt-staging"}}
  waf: 
    enabled: false
    annotations: 
      nginx.ingress.kubernetes.io/lua-resty-waf: "active"  
      nginx.ingress.kubernetes.io/lua-resty-waf-debug: "true"
      nginx.ingress.kubernetes.io/lua-resty-waf-score-threshold: "10"
      nginx.ingress.kubernetes.io/lua-resty-waf-allow-unknown-content-types: "true"
      nginx.ingress.kubernetes.io/lua-resty-waf-process-multipart-body: "false"              

hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  - type: Pods
    pods:
      metric:
        name: packets-per-second
      target:
        type: AverageValue
        averageValue: 1k
  - type: Object
    object:
      metric:
        name: requests-per-second
      describedObject:
        apiVersion: networking.k8s.io/v1beta1
        kind: Ingress
        name: main-route
      target:
        type: Value
        value: 10k

image:
  pullPolicy: IfNotPresent   

# affinity:
#     preferSpreadAcrossAZ: true    

initContainers:
  dbMigration:
    enabled: false
    image:
      pullPolicy: IfNotPresent  
      tag: latest
    env: |
        - name: "DB_URL"
          valueFrom: 
            configMapKeyRef: 
              name: configs
              key: db-url
        - name: "SCHEMA_TABLE"
          value: {{ .Values.initContainers.dbMigration.schemaTable | quote }}              
        - name: "FLYWAY_USER"
          valueFrom: 
            secretKeyRef: 
                name: db
                key: flyway-username
        - name: "FLYWAY_PASSWORD"
          valueFrom:
            secretKeyRef: 
                name: db
                key: flyway-password
        - name: "FLYWAY_LOCATIONS"
          valueFrom: 
            configMapKeyRef: 
                name: configs
                key: flyway-locations

  gitSync:
    enabled: false
    image:
      repository: k8s.gcr.io/git-sync
      tag: v3.1.1
      pullPolicy: IfNotPresent   
    env: |
        - name: "GIT_SYNC_REPO"
          value: "{{ .Values.initContainers.gitSync.repo }}"
        - name: "GIT_SYNC_BRANCH"
          value: "{{ .Values.initContainers.gitSync.branch }}"        
        - name: "GIT_SYNC_DEPTH"
          value: "1"            
        - name: "GIT_SYNC_ONE_TIME"
          value: "true"          
        - name: "GIT_SYNC_SSH"
          value: "true"      
        - name: "GIT_SYNC_ROOT"
          value: "/work-dir"

healthChecks:
    enabled: false
    livenessProbe: |
        httpGet:
            path: "{{ .Values.healthChecks.livenessProbePath }}"
            port: {{ .Values.httpPort }}
        initialDelaySeconds: 30
        timeoutSeconds: 3
        periodSeconds: 60
        successThreshold: 1
        failureThreshold: 5
    readinessProbe: |
        httpGet:
            path: "{{ .Values.healthChecks.readinessProbePath }}"
            port: {{ .Values.httpPort }}
        initialDelaySeconds: 30
        timeoutSeconds: 3
        periodSeconds: 30
        successThreshold: 1
        failureThreshold: 5        

lifecycle:
    preStop:
        exec:
            command:
            - sh
            - -c
            - "sleep 10"
persistence:
  enabled: false
  accessMode: ReadWriteOnce
memory_limits: "512Mi"
resources: |
  {{- if eq .Values.appType "java-spring" -}}
  requests:
    memory: {{ .Values.memory_limits | quote }}
  limits:
    memory: {{ .Values.memory_limits | quote }}
  {{- end -}}
## Allows specification of additional environment variables
extraEnv:          
  jaeger: |             
      - name: JAEGER_SERVICE_NAME
        value: {{ template "common.name" . }}
      - name: JAEGER_SAMPLER_TYPE
        value: remote
      - name: JAEGER_AGENT_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: JAEGER_AGENT_PORT
        value: "6831"
      - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
        value: "$(JAEGER_AGENT_HOST):5778"
      - name: TRACER_OPENTRACING_ENABLED
        value: "true"         
## Additional init containers
extraInitContainers: |

## Additional sidecar containers
extraContainers: |

## Add additional volumes and mounts, e. g. for custom themes
extraVolumes: |
extraVolumeMounts: |

additionalLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000            
additionalAnnotations : |

vault:
  enabled: false
  annotations: |
    {{- if .Values.vault.enabled -}}
    vault.security.banzaicloud.io/vault-addr: {{ default .Values.global.vault.addr .Values.vault.addr }}
    vault.security.banzaicloud.io/vault-path: {{ default .Values.global.vault.path .Values.vault.path }}
    vault.security.banzaicloud.io/vault-role: {{ default .Values.global.vault.role .Values.vault.role }}
    vault.security.banzaicloud.io/vault-skip-verify: "true"
    vault.security.banzaicloud.io/inline-mutation: "true"
    {{- end }}
service:
  type: ClusterIP
  additionalAnnotations: {}

serviceMonitor:
  honorLabels: true
  # interval: 2m  

cron:
  namespace: default
  concurrencyPolicy: Forbid
  restartPolicy: OnFailure
  httpPort: 8080
  ## Additional sidecar containers
  extraContainers: |

  ## Add additional volumes and mounts
  extraVolumes: |

  ## Add additional mounts
  extraVolumeMounts: |
